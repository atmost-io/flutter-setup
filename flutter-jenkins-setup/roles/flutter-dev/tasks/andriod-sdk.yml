---
- name: Check if Android SDK is installed
  stat:
    path: "{{ android_sdk_path }}/cmdline-tools/latest/bin/sdkmanager"
  register: android_sdk_binary

- name: Create Android SDK directory
  file:
    path: "{{ android_sdk_path }}"
    state: directory
    owner: "{{ workspace_user }}"
    group: "{{ workspace_group }}"
    mode: '0755'
  with_items:
    - "{{ android_sdk_path }}"
    - "{{ android_sdk_path }}/cmdline-tools"
    - "{{ android_sdk_path }}/cmdline-tools/latest"
  when: not android_sdk_binary.stat.exists

- name: Download Android Command Line Tools
  get_url:
    url: https://dl.google.com/android/repository/commandlinetools-linux-latest.zip
    dest: /tmp/android-commandline-tools.zip
  when: not android_sdk_binary.stat.exists

- name: Unzip Android Command Line Tools
  unarchive:
    src: /tmp/android-commandline-tools.zip
    dest: "{{ android_sdk_path }}/cmdline-tools/latest"
    remote_src: yes
    owner: "{{ workspace_user }}"
    group: "{{ workspace_group }}"
    extra_opts: [--strip-components=1]
  when: not android_sdk_binary.stat.exists

- name: Set Android environment variables
  blockinfile:
    path: "{{ workspace_root }}/.bashrc"
    owner: "{{ workspace_user }}"
    group: "{{ workspace_group }}"
    create: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK - ANDROID SDK"
    block: |
      export ANDROID_HOME="{{ android_sdk_path }}"
      export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"

- name: Create .android directory
  file:
    path: "{{ workspace_root }}/.android"
    state: directory
    owner: "{{ workspace_user }}"
    group: "{{ workspace_group }}"
    mode: '0755'

- name: Accept Android SDK licenses
  shell: yes | {{ android_sdk_path }}/cmdline-tools/latest/bin/sdkmanager --licenses
  become_user: "{{ workspace_user }}"
  environment:
    ANDROID_HOME: "{{ android_sdk_path }}"
  when: not android_sdk_binary.stat.exists

- name: Install required Android SDK packages
  shell: |
    {{ android_sdk_path }}/cmdline-tools/latest/bin/sdkmanager \
      "platform-tools" \
      "platforms;android-{{ android_sdk_version }}" \
      "build-tools;{{ android_build_tools_version }}"
  become_user: "{{ workspace_user }}"
  environment:
    ANDROID_HOME: "{{ android_sdk_path }}"
  when: not android_sdk_binary.stat.exists
